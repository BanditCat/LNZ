////////////////////////////////////////////////////////////////////////////////
// Copyright (c) Jonathan(Jon) DuBois 2013. This file is part of LNZ.         //
//                                                                            //
// LNZ is free software: you can redistribute it and/or modify it under the   //
// terms of the GNU General Public License as published by the Free Software  //
// Foundation, either version 3 of the License, or (at your option) any later //
// version.                                                                   //
//                                                                            //
// LNZ is distributed in the hope that it will be useful, but WITHOUT ANY     //
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  //
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more     //
// details.                                                                   //
//                                                                            //
// You should have received a copy of the GNU General Public License along    //
// with LNZ, located in the file LICENSE.  If not, see                        //
// <http://www.gnu.org/licenses/>.                                            //
//                                                                            //
// Alternative licensing terms may be available for a fee, contact Jon DuBois //
// (bcj1980@gmail.com) for details.                                           //
////////////////////////////////////////////////////////////////////////////////



Make strings hide behind a function so adding a string doesn't force a
recompile.  Use constexpr.

Occasionally grep through source for BUGBUG, TODO

Make Testable base class, make all classes be children. Write unit tests.

Write FullInt and StateMachine class, then Tokenizer and Parser.


Add warranty boilerplate to help message.

Do timing in tests.



write custom exceptions and handle them so OS::die throws

Rule 1) Exception-safety: all functions in all headers have either noexcept or 
throw declarations, if this is not possible, then use comments to document 
exception behavior.

Rule 2) Formatting: spaces everywhere, braces on same line, everything 80 columns or 
less




Setup repositories for the rest of my code (vislib et al)
